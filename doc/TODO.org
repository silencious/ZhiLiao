* Server Side
** Coding Styles
*** TODO use annotations to delegate requests to handlers
** Features
*** TODO API for Branch following/unfollowing Branch
*** DONE API for User chat history(to display on startup)
*** TODO need more accurate authorization
*** TODO API for "Discovering"(need algorithm, low priority)
*** TODO forwarding commit
*** TODO Private conversation
*** TODO TAG CRUD
** Improving Performance 
*** TODO move websocket server from spring to jetty/glassfish(to be able to send message asynchronously)
*** TODO implement a unique priority queue to replace GLOBAL UNIQUESS(to save memory)
* Client Side
** 后台部分
*** 代码重构――新的API
*** refer语义的修正
*** push消息的分派
**** 不同功能对应的消息容器类（会话、推荐、搜索、动态）
**** 作为转载其他topic的push消息
*** 历史消息作为topic
*** 修改个人信息（邮箱、性别、密码等）
*** Tag
** UI部分
*** main中话题显示优化――间隔与时间
**** 被refer时在主界面对话题进行标记
*** chat中消息显示优化
**** chat中refer的UI显示
**** 悄悄话的UI显示（与一般topic要有区别）
**** 话题分支follow话题分支的操作按钮
*** user中增加移除follower的操作
*** 搜索话题界面
*** 动态界面，包括我的、特定好友或分组的动态
